name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Gradle로 빌드 및 테스트 실행, 로그 파일에 저장
      - name: Build and Test with Gradle
        id: build_and_test
        run: |
          ./gradlew build test --continue > gradle_output.log 2>&1
          echo "BUILD_EXIT_CODE=$?" >> $GITHUB_ENV

      # 커버리지 보고서 생성
      - name: Generate coverage report
        if: always()
        run: ./gradlew jacocoTestReport

      # xunit-viewer 설치
      - name: Install xunit-viewer
        run: npm install -g xunit-viewer

      # JUnit XML을 HTML로 변환
      - name: Convert JUnit XML to HTML
        run: xunit-viewer --results=build/test-results/test --output=build/reports/tests/test/index.html

      # 커버리지 보고서 업로드
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/reports/jacoco/test/html

      # JUnit 테스트 보고서 업로드
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      # 빌드 및 테스트 로그에서 실패 여부 확인
      - name: Check for failing tests in build log
        if: always()
        run: |
          if grep -q "There were failing tests" gradle_output.log; then
            echo "TESTS_FAILED=true" >> $GITHUB_ENV
          else
            echo "TESTS_FAILED=false" >> $GITHUB_ENV
          fi

      # 빌드 또는 테스트 실패 시 워크플로우 실패로 표시
      - name: Fail workflow if build or tests failed
        if: always()
        run: |
          source $GITHUB_ENV
          if [ "$BUILD_EXIT_CODE" -ne 0 ]; then
            echo "Build failed."
            exit 1
          elif [ "$TESTS_FAILED" = "true" ]; then
            echo "Tests failed."
            exit 1
          else
            echo "Build and tests succeeded."
          fi












